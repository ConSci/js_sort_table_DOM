{"version":3,"sources":["scripts/main.js"],"names":["headers","document","querySelector","tableBody","list","querySelectorAll","addEventListener","action","target","tagName","index","callback","children","indexOf","a","b","innerText","getSalary","localeCompare","innerHTML","sort","forEach","tr","append","row","slice","split","join"],"mappings":";AAAA,aAOA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAJA,IAAMA,EAAUC,SAASC,cAAc,YACjCC,EAAYF,SAASC,cAAc,SACnCE,EAAWD,EAAAA,EAAUE,iBAAiB,OAE5CL,EAAQM,iBAAiB,QAAS,SAAAC,GAC5BA,GAA0B,OAA1BA,EAAOC,OAAOC,QAAdF,CAIEG,IACFC,EADED,EAAQ,EAAIV,EAAQY,UAAUC,QAAQN,EAAOC,QAG3CE,OAAAA,GACD,KAAA,EACHC,EAAW,SAACG,EAAGC,GAAMD,OAAAA,EAAEF,SAASF,GAAOM,UACrCD,EAAEH,SAASF,GAAOM,WACpB,MAEG,KAAA,EACHL,EAAW,SAACG,EAAGC,GAAME,OAAAA,EAAUH,GAAKG,EAAUF,IAC9C,MAEF,QACEJ,EAAW,SAACG,EAAGC,GACND,OAAAA,EAAEF,SAASF,GAAOM,UACtBE,cAAcH,EAAEH,SAASF,GAAOM,YAQzCb,EAAUgB,UAAY,GACtBf,EAAKgB,KAAKT,GAAUU,QAAQ,SAAAC,GAAMnB,OAAAA,EAAUoB,OAAOD,KAL1CL,SAAAA,EAAUO,GACV,OAACA,EAAIZ,SAAS,GAAGI,UAAUS,MAAM,GAAGC,MAAM,KAAKC,KAAK","file":"main.12a651bf.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n// write code here\nconst headers = document.querySelector('thead tr');\nconst tableBody = document.querySelector('tbody');\nconst list = [...tableBody.querySelectorAll('tr')];\n\nheaders.addEventListener('click', action => {\n  if (action.target.tagName !== 'TH') {\n    return;\n  }\n\n  const index = [...headers.children].indexOf(action.target);\n  let callback;\n\n  switch (index) {\n    case 2: // age\n      callback = (a, b) => a.children[index].innerText\n      - b.children[index].innerText;\n      break;\n\n    case 3: // salary\n      callback = (a, b) => getSalary(a) - getSalary(b);\n      break;\n\n    default: // name && position\n      callback = (a, b) => {\n        return a.children[index].innerText\n          .localeCompare(b.children[index].innerText);\n      };\n  }\n\n  function getSalary(row) {\n    return +row.children[3].innerText.slice(1).split(',').join('');\n  }\n\n  tableBody.innerHTML = '';\n  list.sort(callback).forEach(tr => tableBody.append(tr));\n});\n"]}